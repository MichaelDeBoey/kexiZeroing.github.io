---
import PlaygroundLayout from '@/layouts/PlaygroundLayout.astro';
---

<PlaygroundLayout title="Motion Examples">
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-4 px-8">
    <div>
      <p class="text-lg mb-4">Hover</p>
      <div class="box box-hover bg-indigo-300"></div>
    </div>
    <div>
      <p class="text-lg mb-4">Press</p>
      <div class="box box-press cursor-pointer bg-emerald-300"></div>
    </div>
    <div>
      <p class="text-lg mb-4">HTML Content</p>
      <pre id="count" class="text-3xl">0</pre>
    </div>
    <div>
      <p class="text-lg mb-4">Rotate</p>
      <div class="box box-rotate bg-sky-300"></div>
    </div>
    <div>
      <p class="text-lg mb-4">Stagger</p>
      <ul class="stagger flex gap-2">
        <li class="box bg-orange-300"></li>
        <li class="box bg-orange-300"></li>
        <li class="box bg-orange-300"></li>
        <li class="box bg-orange-300"></li>
      </ul>
    </div>
    <div>
      <p class="text-lg mb-4">Scroll Fade In</p>
      <div class="scroll-container h-40 overflow-y-auto p-4 border border-gray-200 rounded">
        <div class="box scroll-fade bg-purple-300 mb-4"></div>
        <div class="box scroll-fade bg-purple-300 mb-4"></div>
        <div class="box scroll-fade bg-purple-300 mb-4"></div>
        <div class="box scroll-fade bg-purple-300"></div>
      </div>
    </div>
    <div>
      <p class="text-lg mb-4">Path Animation</p>
      <div class="path-container relative h-40 border border-gray-200 rounded">
        <div class="w-8 h-8 box-path absolute bg-yellow-300"></div>
      </div>
    </div>
  </div>
</PlaygroundLayout>

<style>
.box {
  width: 100px;
  height: 100px;
  border-radius: 10px;
}
.stagger .box {
  width: 50px;
  height: 50px;
  border-radius: 6px;
  opacity: 0;
}
.scroll-fade {
  opacity: 0;
}
</style>

<script>
import { animate, press, hover, stagger, inView } from "motion"

hover(".box-hover", (element) => {
  animate(element, { scale: 1.3 }, { type: "spring" })

  return () => animate(element, { scale: 1 }, { type: "spring" })
})

press(".box-press", (element) => {
  animate(element, { scale: 0.8 }, { type: "spring", stiffness: 1000 })

  return () => animate(element, { scale: 1 }, { type: "spring", stiffness: 500 })
})

const count = document.getElementById("count")
animate(0, 100, {
  duration: 2,
  ease: "circOut",
  onUpdate: (latest) => (count.innerHTML = String(Math.round(latest))),
})

animate(".box-rotate", { rotate: 360 }, { duration: 2, repeat: Infinity })

animate(".stagger li", { opacity: 1, y: [50, 0] }, { delay: stagger(0.1) })

inView(".scroll-fade", (element) => {
  animate(element, { opacity: 1, y: [50, 0] }, { delay: 0.2, duration: 0.8 })
})

animate(".box-path", 
  { 
    x: [0, 150, 150, 0, 0], 
    y: [0, 0, 100, 100, 0] 
  }, 
  { 
    duration: 4, 
    repeat: Infinity,
  }
)
</script>
